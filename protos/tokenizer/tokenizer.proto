syntax = "proto3";

package messages.tokenizer;

import "tokenizer/encoding.proto";

// Imports for training a new tokenizer
import "models/model.proto";
import "trainers/trainer.proto";
import "processors/processor.proto";
import "decoders/decoder.proto";
import "tokenizer/truncation.proto";
import "tokenizer/padding.proto";

option csharp_namespace = "Tokenizers.HuggingFace.Internal.Tokenizer";

message EncodeParams {
  string input = 1;
  optional string input2 = 2;
  bool add_special_tokens = 3;

  // Expected response fields, this helps avoiding `over fetching`

  // Defaults: false
  optional bool include_type_ids = 4;
  // Defaults: false
  optional bool include_tokens = 5;
  // Defaults: false
  optional bool include_words = 6;
  // Defaults: false
  optional bool include_offsets = 7;
  // Defaults: false
  optional bool include_special_tokens_mask = 8;
  // Defaults: false
  optional bool include_attention_mask = 9;
  // Defaults: false
  optional bool include_overflowing = 10;
}

message EncodeResult {
  // first value is the result, the rest is the overflowing if `include_overflowing` is set to true
  repeated Encoding encodings = 1;
}

message DecodeParams {
  repeated uint32 ids = 1;
  bool skip_special_tokens = 2;
}

message DecodeResult {
  string decoded = 1;
}

message TokenizerFromFile {
  string file = 1;
}

message TokenizerFromTrain {
  // Memory address pointing to a NormalizerWrapper
  optional uint64 normalizer = 1;
  // Memory address pointing to a PreTokenizerWrapper
  optional uint64 pre_tokenizer = 2;
  messages.models.ModelWrapper model = 3;
  messages.trainers.TrainerWrapper trainer = 4;
  optional messages.processors.ProcessorWrapperParams processor = 5;
  optional messages.decoders.DecoderWrapperParams decoder = 6;
  optional messages.tokenizer.TruncationParams truncation = 7;
  optional messages.tokenizer.PaddingParams padding = 8;
  repeated string files = 9;
  string save_path = 10;
  // Defaults: false
  optional bool pretty = 11;
}
